name: "Terraform Python Automation"

on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - "terraform-project/**" # Only run when terraform files change
      - "terraform_automate.py"
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: "0 3 * * *"

jobs:
  terraform:
    name: "Terraform Lint,Autom-format,Scan,dry run and Execution"
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant permission to write to the repository

    # strategy:
    #   matrix:
    #     python-version: ["3.10", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Show Full Commit Message & Details
        run: |
          echo "${{ github.event.head_commit.message }}"
          echo "Committer: ${{ github.event.head_commit.committer.name }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Repository: ${{ github.repository }}"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          # This installs the latest 3.13.x (â‰¥ 3.13.0)
        # with:
        #   python-version: ${{ matrix.python-version }}
      - name: Print Python Version
        run: |
          python --version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your desired AWS region
      - name: Install and Run Checkov
        run: |
          pip install checkov
          # Scan the terraform-project directory.
          # --soft-fail will ensure the workflow continues even if issues are found,
          # allowing you to review them without blocking deployment.
          checkov --directory terraform-project --soft-fail --output cli > checkov_results.txt
      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - name: Run Terraform Automation Script
        run: python terraform_automate.py
      - name: Commit Scan Results
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Update TFLint and Checkov scan results"
          file_pattern: "tflint_results.txt checkov_results.txt"
